apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: cxf-cdi-java-example-appdynamics

parameters:
- description: The template service name, required
  name: SERVICE_NAME
  value: cxf-cdi-java-example-appdynamics
  required: true
- description: The source repository
  name: SOURCE_REPOSITORY
  value: https://github.com/debianmaster/spring-sample-app.git
  required: true
- description: Source branch
  name: SOURCE_REF
  value: 
  required: false
- description: AppDynamics Controller Host
  name: APPDYNAMICS_CONTROLLER_HOST_NAME
  value: davinci2019012020230415.saas.appdynamics.com
  required: true
- description: AppDynamics Controller Port
  name: APPDYNAMICS_CONTROLLER_PORT
  value: '80'
  required: true
- description: AppDyanamics SSL Enabled
  name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
  value: 'false'
  required: true
- description: AppDynamics Agent Account Name
  name: APPDYNAMICS_AGENT_ACCOUNT_NAME
  value: davinci2019012020230415
  required: true
- description: AppDynamics Agent Acount Key
  name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
  value: py46uquxorno
  required: true
- description: Maven release version
  name: RELEASE_VERSION
  value: 1.0-SNAPSHOT
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9779"
      prometheus.io/scrape: "true"
    creationTimestamp: null
    labels:
      app: ${SERVICE_NAME}
      container: java
      version: 2.2.0.redhat-079
    name: ${SERVICE_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

    
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      component: ${SERVICE_NAME}
      container: java
      version: 2.2.0.redhat-079
    name: ${SERVICE_NAME}-route
  spec:
    to:
      kind: Service
      name: ${SERVICE_NAME}
  status: {}
  
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${SERVICE_NAME}:latest
    resources: {}
    source:
      git:
        ref: ${SOURCE_REF}
        uri: ${SOURCE_REPOSITORY}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: fis-java-appdynamics:latest
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0

- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/image.dockerRepositoryCheck: 2016-05-17T11:14:11Z
    creationTimestamp: null
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    tags:
    - from:
        kind: DockerImage
        name: ${SERVICE_NAME}:latest
      name: latest
  status:
    dockerImageRepository: ""
    
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${SERVICE_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${SERVICE_NAME}
          deploymentconfig: ${SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: JAVA_OPTIONS
            value: '-javaagent:/opt/appdynamics/javaagent.jar'
          - name: TZ
            value: Europe/London
          - name: APPDYNAMICS_CONTROLLER_HOST_NAME
            value: ${APPDYNAMICS_CONTROLLER_HOST_NAME}
          - name: APPDYNAMICS_CONTROLLER_PORT
            value: ${APPDYNAMICS_CONTROLLER_PORT}
          - name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
            value: ${APPDYNAMICS_CONTROLLER_SSL_ENABLED}
          - name: APPDYNAMICS_AGENT_ACCOUNT_NAME
            value: ${APPDYNAMICS_AGENT_ACCOUNT_NAME}
          - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
            value: ${APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY}
          - name: APPDYNAMICS_AGENT_APPLICATION_NAME
            value: ${SERVICE_NAME}
          - name: APPDYNAMICS_AGENT_TIER_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: APPDYNAMICS_AGENT_NODE_NAME  
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: ${SERVICE_NAME}
          imagePullPolicy: Always
          name: ${SERVICE_NAME}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: ${SERVICE_NAME}:latest
      type: ImageChange
    - type: ConfigChange
  status: {}